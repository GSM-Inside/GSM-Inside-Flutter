name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Copy Secret To application module
        run: echo "PROJECT_API_KEY=$MAP_API_KEY" >> .env
        env:
          MAP_API_KEY: ${{ secrets.PROJECT_API_KEY }}

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - run: flutter pub get
      - run: flutter analyze

      - name: Set Variables for Discord Notification
        id: vars
        uses: actions/github-script@v6
        with:
          script: |
            const ref = process.env.GITHUB_REF;
            const branch = ref.split('refs/heads/')[1];
            const commitMessage = process.env.GITHUB_EVENT_HEAD_COMMIT_MESSAGE;
            const timestamp = process.env.GITHUB_EVENT_HEAD_COMMIT_TIMESTAMP;
            const serverUrl = process.env.GITHUB_SERVER_URL;
            const repository = process.env.GITHUB_REPOSITORY;
            const runId = process.env.GITHUB_RUN_ID;
            const senderLogin = process.env.GITHUB_EVENT_SENDER_LOGIN;
            const senderHtmlUrl = process.env.GITHUB_EVENT_SENDER_HTML_URL;
            const senderAvatarUrl = process.env.GITHUB_EVENT_SENDER_AVATAR_URL;

            return {
              branch,
              commitMessage,
              timestamp,
              serverUrl,
              repository,
              runId,
              senderLogin,
              senderHtmlUrl,
              senderAvatarUrl
            };
        env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_EVENT_HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_EVENT_HEAD_COMMIT_TIMESTAMP: ${{ github.event.head_commit.timestamp }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_EVENT_SENDER_LOGIN: ${{ github.event.sender.login }}
          GITHUB_EVENT_SENDER_HTML_URL: ${{ github.event.sender.html_url }}
          GITHUB_EVENT_SENDER_AVATAR_URL: ${{ github.event.sender.avatar_url }}

      - name: Send Discord Notification
        env:
          DATA: |
            {
              "embeds": [
                {
                  "title": "CI 성공이노 :)",
                  "description": "** COMMIT MESSAGE **\n```\n${{ steps.vars.outputs.commitMessage }}\n```",
                  "color": 46335,
                  "timestamp": "${{ steps.vars.outputs.timestamp }}",
                  "url": "${{ steps.vars.outputs.serverUrl }}/${{ steps.vars.outputs.repository }}/actions/runs/${{ steps.vars.outputs.runId }}",
                  "author": {
                    "name": "${{ steps.vars.outputs.senderLogin }}",
                    "url": "${{ steps.vars.outputs.senderHtmlUrl }}",
                    "icon_url": "${{ steps.vars.outputs.senderAvatarUrl }}"
                  },
                  "thumbnail": {
                    "url": "${{ steps.vars.outputs.senderAvatarUrl }}"
                  },
                  "image": {
                    "url": "https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExdWgzaWp5dnprYTVlcXpqbTd6MHFwcnpwZnhlMzMyZXNzbWc3Z2RxdSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/RLW9YEaSBfBMt79fm4/giphy.gif"
                  },
                  "footer": {
                    "icon_url": ""
                  },
                  "fields": [
                    {
                      "name": "Repository",
                      "value": "> [Signet-GSM/Signet-Flutter](https://github.com/Signet-GSM/Signet-Flutter)\n"
                    },
                    {
                      "name": "Branch",
                      "value": "> [${{ steps.vars.outputs.branch }}](https://github.com/${{ steps.vars.outputs.repository }}/tree/${{ steps.vars.outputs.branch }})",
                      "inline": false
                    },
                    {
                      "name": "Workflow",
                      "value": "> [CI](${ { steps.vars.outputs.serverUrl }}/${{ steps.vars.outputs.repository }}/actions/runs/${{ steps.vars.outputs.runId }})",
                      "inline": false
                    }
                  ]
                }
              ]
            }
        run: |
          curl -X POST -H 'Content-type: application/json' \
          -d "$DATA" \
          "${{ secrets.DISCORD_WEBHOOK_URL }}"

  build_ios:
    name: Build Flutter (iOS)
    needs: [flutter_test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Copy Secret To application module
        run: echo "PROJECT_API_KEY=$MAP_API_KEY" >> .env
        env:
          MAP_API_KEY: ${{ secrets.PROJECT_API_KEY }}

      - uses: actions/setup-java@v2
        with:
          java-version: '12.x'
          
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter pub get
      - run: flutter clean
      - run: flutter build ios --release --no-codesign

  build_appbundle:
    name: Build Flutter (Android)
    needs: [flutter_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Copy Secret To application module
        run: echo "PROJECT_API_KEY=$MAP_API_KEY" >> .env
        env:
          MAP_API_KEY: ${{ secrets.PROJECT_API_KEY }}

      - uses: actions/setup-java@v2
        with:
          java-version: '12.x'
          
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter pub get
      - run: flutter clean
      - run: flutter build appbundle
